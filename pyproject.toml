[tool.poetry]
name = "poetry-core"
version = "1.1.0a6"
description = "Poetry PEP 517 Build Backend"
authors = ["SÃ©bastien Eustace <sebastien@eustace.io>"]

license = "MIT"

readme = "README.md"

homepage = "https://github.com/python-poetry/poetry-core"
repository = "https://github.com/python-poetry/poetry-core"

keywords = ["packaging", "dependency", "poetry"]

classifiers = [
    "Topic :: Software Development :: Build Tools",
    "Topic :: Software Development :: Libraries :: Python Modules"
]

packages = [
    {include = "poetry"},
]
include = [
    { path = "tests", format = "sdist" },
]
exclude = [
    "**/*.pyc",
    "**/*.pyi",
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/python-poetry/poetry/issues"

[tool.poetry.dependencies]
python = "^3.6"

# required for compatibility
importlib-metadata = {version = ">=1.7.0", python = "<3.8"}
dataclasses = {version = ">=0.8", python = "~3.6"}

[tool.poetry.dev-dependencies]
pre-commit = {version = "^2.15.0", python = "^3.6.1"}
pyrsistent = "^0.18.0"
pytest = "^6.2"
pytest-cov = "^2.8"
pytest-mock = "^3.5"
tox = "^3.0"
vendoring = {version = "^0.3", python = "^3.8"}
pep517 = "^0.11.0"
black = {version = "^21.9b0", markers = "python_version >= '3.6.2' and python_version < '4.0' and implementation_name != 'pypy'"}
isort = {version = "^5.9.3", python = "^3.6.1"}

[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | poetry/core/_vendor/*
)/
'''

[tool.isort]
profile = "black"
force_single_line = true
atomic = true
include_trailing_comma = true
lines_after_imports = 2
lines_between_types = 1
use_parentheses = true
skip_glob = ["*/setup.py", "*/poetry/core/_vendor/*"]
filter_files = true

known_first_party = "poetry.core"
known_third_party = ["poetry.core._vendor"]

[tool.mypy]
python_version = "3.6"
follow_imports = "silent"
ignore_missing_imports = true
files = "poetry"
exclude = "poetry/core/_vendor"

# The following whitelist is used to allow for incremental adoption
# of Mypy. Modules should be removed from this whitelist as and when
# their respective type errors have been addressed. No new modules
# should be added to this whitelist.
# see https://github.com/python-poetry/poetry-core/pull/199.

[[tool.mypy.overrides]]
module = [
  'poetry.core.factory.*',
  'poetry.core.masonry.*',
  'poetry.core.packages.*',
  'poetry.core.poetry.*',
  'poetry.core.pyproject.*',
  'poetry.core.semver.*',
  'poetry.core.spdx.*',
  'poetry.core.version.*',
]
ignore_errors = true

[tool.vendoring]
destination = "poetry/core/_vendor/"
requirements = "poetry/core/_vendor/vendor.txt"
namespace = ""

protected-files = ["__init__.py", "README.md", "vendor.txt"]
patches-dir = "vendors/patches"

[tool.vendoring.transformations]
substitute = []
drop = [
    "bin/",
    "*.so",
    "typing.*",
    "*/tests/"
]

[tool.vendoring.typing-stubs]
six = ["six.__init__", "six.moves.__init__", "six.moves.configparser"]
appdirs = []

[tool.vendoring.license.directories]


[tool.vendoring.license.fallback-urls]
pyrsistent = "https://raw.githubusercontent.com/tobgu/pyrsistent/master/LICENSE.mit"

[build-system]
requires = ["dataclasses>=0.6;python_version < '3.7'"]
build-backend = "poetry.core.masonry.api"
backend-path = ["."]
